% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writeSelectionCHK.R
\name{writeSelectionCHK}
\alias{writeSelectionCHK}
\title{Writes a chk file containing the variables selected for printing}
\usage{
writeSelectionCHK(filepath, data, name)
}
\arguments{
\item{filepath}{Path to file to be written.}

\item{data}{Tibble or data frame with description of variables to be written.}

\item{name}{A character string for the name of the selection.}
}
\value{
NULL if successful.
}
\description{
RSMinerve writes result files or performs plots for a selection of variables.
This selection can be stored in and loaded to RSMInerve from a chk file. The
function \code{writeSelectionCHK} writes such a file from a tibble.
}
\details{
The chk file is structured as shown in the following example:  \cr  <?xml version="1.0" encoding="utf-8"?>   \\cr


<Selection>   \cr
<Name>New selection</Name>  \cr
<Path>Model Koksu\\Source QSpring\\Kichkinesay - QUp (m3/s)</Path>  \cr
<Path>Model Koksu\\Comparator Comparator 1\\QReference (m3/s)</Path>  \cr
<Path>Model Koksu\\Comparator Comparator 1\\QSimulation (m3/s)</Path>  \cr
...  \cr
The content of the Path parts is parsed from a tibble with columns Model,
Object, ID and Variable. The input tibble of the example above would be: \cr
A tibble: 94 x 3  \cr
Model       Object                     Variable    \cr
<chr>       <chr>                      <chr>             \cr
Model Koksu Source QSpring             Kichkinesay - QUp (m3/s)  \cr
Model Koksu Comparator Comparator 1    QReference (m3/s)     \cr
Model Koksu Comparator Comparator 1    QSimulation (m3/s)    \cr
...         ...                        ...  \cr
}
\examples{
\dontrun{
filepath <- normalizePath(file.path("test_writeSelectionCHK.chk"))
Object_IDs <- c("SOCONT 1", "SOCONT 2", "SOCONT 3")
data <- tibble::tibble(
  Model = rep("Tutorial_Model", length(Object_IDs)),
  Object = rep("SOCONT", length(Object_IDs)),
  ID = Object_IDs,
  Variable = rep("Qtot (m3/s)")
)
name <- "SOCONT Qtot"
writeSelectionCHK(filepath, data, name)
}
}
